# Get External IP / Internet Speed
alias myip="curl https://ipinfo.io/json" # or /ip for plain-text ip

# Quickly serve the current directory as HTTP
alias serve='ruby -run -e httpd . -p 8000' # Or python -m SimpleHTTPServer :)

# Gem WTF
gemwtf() {
  open "https://gem.wtf/$1"
}

# generate random decimal between -1 and 1
rand() {
  min=-0.75
  max=0.75
  awk -v min=$min -v max=$max 'BEGIN{srand(); print min+rand()*(max-min)}'
}

# scans
fakescan() {
  for doc in $@
  do
    destination=${doc%.*}_scanned.pdf
    echo "'Scanning' $doc to $destination... "
    angle=$(rand)
    convert -density 150 $doc -colorspace gray +noise Gaussian -rotate $angle -depth 2 $destination
  done
}

# NOTE: On Q3 2021, Le Wagon decided to change the Web Dev curriculum default text editor
alias stt="echo 'Launching VS Code instead of Sublime Text... (cf ~/.aliases)' && code ."

# Add radian:
alias r="radian"

# Navigate to Windows documents
alias mydocs="cd /mnt/c/Documents\ and\ Settings/Gareth.Maddock/Documents"

# Create r package
new_package () {
  Rscript -e "if(!require(usethis)) install.packages('usethis')" \
          -e "usethis::create_package(path = '$1')"
}

# Create Golem app
golem () {
  Rscript -e "if(!require(golem)) install.packages('golem')" \
          -e "golem::create_golem(path = '$1')"
}

# Alias for bat / batcat
alias bat="batcat"

# combine pdfs
pdf_combine() {
    # Check if a glob pattern is provided
    if [ -z "$1" ]; then
        echo "Usage: pdf_combine_and_footer '<glob-pattern>'"
        echo "Example: pdf_combine_and_footer '*.pdf'"
        return 1
    fi

    # Assign the glob pattern
    local glob_pattern=$1

    # Temporary directory for intermediate files
    local tempdir=$(mktemp -d)
    local output="output_combined.pdf"

    # Get the list of PDF files matching the glob pattern
    local pdf_files=($(ls $glob_pattern))

    # Add footer to each file
    for pdf_file in "${pdf_files[@]}"; do
        local filename=$(basename "$pdf_file" .pdf)
        pdfjam --outfile "$tempdir/${filename}_footer.pdf" --footer "${filename}" "$pdf_file"
    done

    # Combine PDFs with footers
    pdftk "$tempdir"/*_footer.pdf cat output "$output"

    # Cleanup temporary directory
    rm -rf "$tempdir"

    echo "Combined PDF with footers: $output"
}
